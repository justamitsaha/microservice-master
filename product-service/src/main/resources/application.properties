server.port=0
spring.application.name=product-service
server.servlet.context-path=/product

spring.config.import=optional:configserver:http://localhost:8071/
spring.profiles.active=prod

#spring.r2dbc.url=r2dbc:h2:mem:///productDb
#spring.r2dbc.username=sa
#spring.r2dbc.password=password
#spring.h2.console.enabled=true

spring.r2dbc.url=r2dbc:pool:mysql://192.168.0.143:3306/IDENTITY_DB?zeroDateTimeBehavior=convertToNull&useSSL=false&useServerPrepareStatement=true
spring.r2dbc.username=sammy
spring.r2dbc.password=Developer@007
logging.level.org.springframework.data.repository=DEBUG
logging.level.org.springframework.r2dbc.core=DEBUG

user.service.url=http://IDENTITY-SERVICE/identity/user/

api.info=Product API
accounts.message=Welcome to Buying and Selling product Local config
accounts.contactDetails.name=John Doe - Developer Local
accounts.contactDetails.email=john@mailinator.com
accounts.onCallSupport=(555) 555-1234, (555) 523-1345

management.endpoints.web.exposure.include=*
#Will allow the actuator to shut down
management.endpoint.shutdown.enabled=true
# Enable env info related properties
management.info.env.enabled=true
#Will allow the actuator to shut down
endpoints.shutdown.enabled=true
#expose readiness
management.health.readiness-state.enabled=true
#expose liveness
management.health.liveness-state.enabled=true
#expose endpoint web URL for above
management.endpoint.health.probes.enabled=true



#Will register with IP
eureka.instance.preferIpAddress=true
eureka.client.fetchRegistry=true
eureka.client.registerWithEureka=true
eureka.client.serviceUrl.defaultZone=http://localhost:8081/discovery/eureka/


spring.cloud.function.definition=updateCommunication
#Below for receiving message
#spring.cloud.stream.bindings.updateCommunication-in-0.destination=communication-sent
#spring.cloud.stream.bindings.updateCommunication-in-0.group=${spring.application.name}

#Below for sending message
spring.cloud.stream.bindings.sendCommunication-out-0.destination=send-communication

spring.rabbitmq.host=192.168.0.143
#spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.connection-timeout=10s


spring.kafka.topic=library-events
spring.kafka.template.default-topic=library-events
#spring.kafka.producer.bootstrap-servers=192.168.0.143:9092,192.168.0.143:9093,192.168.0.143:9094
spring.kafka.producer.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.acks=all
spring.kafka.producer.properties.retries=10
spring.kafka.producer.properties.retry.backoff.ms=1000


info.app.name=Products
info.app.description=MicroService Application Product service
info.app.version=1.0.0






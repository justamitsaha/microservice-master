apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-service-deployment
#  namespace: amit
  labels:
    app: identity-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: identity-service
  template:
    metadata:
      labels:
        app: identity-service
    spec:
      initContainers:
        - name: wait-for-discovery-service
          image: appropriate/curl:latest
          command:
            - /bin/sh
            - -c
            - >
              until curl --fail --silent http://discovery-service:8081/discovery/actuator/health | grep '"status":"UP"'; do
                echo "Waiting for discovery-service to be UP";
                sleep 5;
              done
        - name: init-opentelemetry
          image: curlimages/curl:latest
          command: [ "/bin/sh", "-c" ]
          args:
            - curl -L -o /app/libs/opentelemetry-javaagent.jar https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/download/v1.32.0/opentelemetry-javaagent.jar
          volumeMounts:
            - name: otel-agent
              mountPath: /app/libs
      containers:
        - name: identity-service
          image: justamitsaha/ms-identity-service:observability
          ports:
            - containerPort: 8090
          volumeMounts:
            - name: otel-agent
              mountPath: /app/libs   # open telemetry  will be loaded at this path by init container
          env:
            - name: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
              valueFrom:
                configMapKeyRef:
                  name: microservice-master-configmap
                  key: EUREKA_HOST
            - name: SPRING_CONFIG_IMPORT
              valueFrom:
                configMapKeyRef:
                  name: microservice-master-configmap
                  key: CONFIG_SERVER_URI
            - name: TZ
              value: "Asia/Kolkata"
            - name: JAVA_OPTS
              value: "-Duser.timezone=Asia/Kolkata"
            - name: SPRING_RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: microservice-master-configmap
                  key: RABBITMQ_HOST
            - name: SPRING_RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: microservice-master-configmap
                  key: RABBITMQ_PORT
            - name: SPRING_RABBITMQ_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: microservice-master-configmap
                  key: RABBITMQ_USERNAME
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: microservice-master-configmap
                  key: RABBITMQ_PASSWORD
            - name: JAVA_TOOL_OPTIONS
              valueFrom:
                configMapKeyRef:
                  name: microservice-master-configmap
                  key: JAVA_TOOL_OPTIONS
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: microservice-master-configmap
                  key: OTEL_EXPORTER_OTLP_ENDPOINT
            - name: OTEL_METRICS_EXPORTER
              valueFrom:
                configMapKeyRef:
                  name: microservice-master-configmap
                  key: OTEL_METRICS_EXPORTER
            - name: OTEL_SERVICE_NAME
              value: identity-service
          startupProbe:
            httpGet:
              path: /identity/actuator/health
              port: 8090
            initialDelaySeconds: 60 # Wait 60 seconds before first check
            periodSeconds: 10 # Check every 10 seconds
            failureThreshold: 10 # Fail after 10 unsuccessful checks

          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - >
                  curl --fail --silent http://localhost:8090/identity/user/findById/1 | grep Amit || exit 1
            initialDelaySeconds: 30
            periodSeconds: 10

          readinessProbe:
            httpGet:
              path: /identity/actuator/health
              port: 8090
            initialDelaySeconds: 30
            periodSeconds: 10

      volumes:
        - name: otel-agent
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: identity-service # other pods in the cluster will identify this one with this field
#  namespace: amit
spec:
  selector:
    app: identity-service
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8090
      targetPort: 8090


#Check if the identity-service deployment is picking the correct environment variable:
#      kubectl describe pod <identity-service-pod-name> -n amit

# Check if the environment variable is set correctly inside the pod:
# kubectl exec -it identity-service-deployment-57d5849f6-4kcjc -n amit -- printenv | grep SPRING_CONFIG_IMPORT

